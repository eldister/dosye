<?php

/**
 * BaseDosyeSubGroup
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $group_id
 * @property integer $subgroup_id
 * @property DosyeGroup $Group
 * @property DosyeGroup $SubGroup
 * 
 * @method integer       getGroupId()     Returns the current record's "group_id" value
 * @method integer       getSubgroupId()  Returns the current record's "subgroup_id" value
 * @method DosyeGroup    getGroup()       Returns the current record's "Group" value
 * @method DosyeGroup    getSubGroup()    Returns the current record's "SubGroup" value
 * @method DosyeSubGroup setGroupId()     Sets the current record's "group_id" value
 * @method DosyeSubGroup setSubgroupId()  Sets the current record's "subgroup_id" value
 * @method DosyeSubGroup setGroup()       Sets the current record's "Group" value
 * @method DosyeSubGroup setSubGroup()    Sets the current record's "SubGroup" value
 * 
 * @package    dosye
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseDosyeSubGroup extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('dosye_sub_group');
        $this->hasColumn('group_id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             ));
        $this->hasColumn('subgroup_id', 'integer', null, array(
             'type' => 'integer',
             'primary' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('DosyeGroup as Group', array(
             'local' => 'group_id',
             'foreign' => 'id'));

        $this->hasOne('DosyeGroup as SubGroup', array(
             'local' => 'subgroup_id',
             'foreign' => 'id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $fzblameable0 = new Doctrine_Template_fzBlameable();
        $this->actAs($timestampable0);
        $this->actAs($fzblameable0);
    }
}